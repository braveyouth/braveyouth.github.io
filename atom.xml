<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>braveyouth</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-04-09T09:51:46.699Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Mr.Zhang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>开发环境</title>
    <link href="http://yoursite.com/2020/04/09/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>http://yoursite.com/2020/04/09/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</id>
    <published>2020-04-09T09:34:14.000Z</published>
    <updated>2020-04-09T09:51:46.699Z</updated>
    
    <content type="html"><![CDATA[<h2 id="DOS"><a href="#DOS" class="headerlink" title="DOS"></a>DOS</h2><p>win+R，打开运行窗口，输入cmd，进入DOS操作窗口</p><a id="more"></a><blockquote><p><strong>常用命令：</strong><br>切换盘符：<code>盘符名：</code><br>查看当前文件夹：<code>dir</code><br>进入文件夹：<code>cd 文件夹名</code><br>退出文件夹：<code>cd ../</code><br>退出到当前文件夹根目录：<code>cd \</code><br>清屏：<code>cls</code></p></blockquote><h2 id="JAVA语言开发环境"><a href="#JAVA语言开发环境" class="headerlink" title="JAVA语言开发环境"></a>JAVA语言开发环境</h2><ul><li>下载： <a href="https://www.oracle.com/java/technologies/javase-downloads.html" target="_blank" rel="noopener">https://www.oracle.com/java/technologies/javase-downloads.html</a> </li><li>安装：next就可以，安装位置可以自己修改</li><li>JAVA_HOME环境变量配置<ul><li>win+S，搜索<strong>查看高级系统设置</strong>或资源管理器于此电脑右键<strong>属性</strong>，点击<strong>高级系统设置</strong>，进入系统属性窗口</li><li>点击<strong>高级</strong>选项卡下的<strong>环境变量</strong>按钮，进入环境变量窗口</li><li>点击系统变量下的<strong>新建</strong>按钮 ，创建新的环境变量，变量名输入<code>JAVA_HOME</code> ，变量值浏览jdk安装目录<code>D:\Develop\Java\jdk1.8.0_202</code>，点击确定</li><li>选择<code>Path</code>环境变量，双击或者点击<strong>编辑</strong>按钮，进去编辑环境变量窗口</li><li>点击<strong>新建</strong>按钮，输入<code>%JAVA_HOME%\bin</code>，点击<strong>确定</strong>按钮</li></ul></li></ul><blockquote><p><strong>环境变量配置的作用：</strong></p><ul><li>开发Java程序，需要使用JDK中提供的工具，工具在JDK8安装目录的 bin 目录下</li><li>在DOS命令行下使用这些工具，就要先进入到JDK的bin目录下，这个过程就会非常的麻烦；不进入JDK的 bin 目录，这些工具就不能使用，会报错</li><li>为了开发方便，我们想在任意的目录下都可以使用JDK的开发工具，则必须要配置环境变量，配置环境变量的意义，在于告诉操作系统，我们使用的JDK开发工具在哪个目录下</li></ul></blockquote><h2 id="IntelliJ-IDEA开发工具"><a href="#IntelliJ-IDEA开发工具" class="headerlink" title="IntelliJ IDEA开发工具"></a>IntelliJ IDEA开发工具</h2><ul><li><p>下载： <a href="https://www.jetbrains.com/zh-cn/idea/download/#section=windows" target="_blank" rel="noopener">https://www.jetbrains.com/zh-cn/idea/download/#section=windows</a> </p></li><li><p>安装破解</p><ul><li>安装<ul><li>双击ideaIU-2017.3.4.exe应用程序，点击next，选择安装文件夹再点next</li><li>只勾选64-bit launcher选项，点击next</li><li>点击install等待安装完成</li><li>安装完成，直接点击Finish，不要勾选Run IntelliJ IDEA，完成后也不要运行程序，这会导致无法破解</li></ul></li><li>破解<ul><li>复制破解文件<code>JetbrainsCrack-2.8-release-enc.jar</code>到安装目录bin文件夹下</li><li>64位操作系统编辑<code>idea64.exe.vmoptions</code>文件，在最后一行加上<br><code>-javaagent:D:\Develop\IntelliJ IDEA 2017.3.4\bin\JetbrainsCrack-2.8-release-enc.jar</code></li><li>打开软件，选择<strong>Do not import settings</strong>，点击ok，选择<strong>Activation code</strong>，将注册码.txt里面的破解文件复制粘贴进去，点击ok，然后一路next就好</li></ul></li></ul></li><li><p>使用</p></li><li><p>问题</p><ul><li><p>类文件中import不成功，为灰色</p><p>解决方案：</p><ul><li>先关闭idea，删除项目文件夹中的.idea和.iml文件，重新打开idea编译</li><li>点击Invalidate Caches/Restart</li></ul></li></ul></li><li><p>卸载</p></li></ul><h2 id="MySQL关系型数据库"><a href="#MySQL关系型数据库" class="headerlink" title="MySQL关系型数据库"></a>MySQL关系型数据库</h2><ul><li>下载</li><li>安装<ul><li>MySql5.5<ul><li>双击mysql-5.5.40-win64.msi进行安装</li></ul></li></ul></li><li>使用<ul><li>启动MySQL服务<ul><li>win+R，输入services.msc，打开服务窗口，右键MySQL55启动服务</li><li>以管理员身份运行命令提示符，输入<code>net start mysql</code>启动mysql服务，输入<code>net stop mysql</code>关闭mysql服务</li></ul></li><li>登录MySQL<ul><li>mysql -uroot -p密码</li><li>mysql -hip -uroot -p连接目标的密码</li><li>mysql –host=ip –user=root –password=连接目标的密码</li></ul></li><li>退出MySQL<ul><li>输入exit</li><li>输入quit</li></ul></li></ul></li><li>卸载<ul><li>MySQL5.5<ul><li>去mysql的安装目录找到my.ini文件 ,复制 <code>datadir=&quot;C:/ProgramData/MySQL/MySQL Server 5.5/Data/&quot;</code></li><li>卸载MySQL</li><li>删除C:/ProgramData目录下的MySQL文件夹</li></ul></li></ul></li></ul><h2 id="Tomcat服务器"><a href="#Tomcat服务器" class="headerlink" title="Tomcat服务器"></a>Tomcat服务器</h2><ul><li><p>下载： <a href="http://tomcat.apache.org/" target="_blank" rel="noopener">http://tomcat.apache.org/</a> </p></li><li><p>安装：解压压缩包，安装路径建议不要有中文和空格</p></li><li><p>使用</p><ul><li><p>启动服务</p><p>bin/startup.bat，双击运行该文件即可</p></li><li><p>访问：浏览器输入<code>http://localhost:8080</code>回车访问自己</p><pre><code>`http://远程ip:8080`回车访问别人</code></pre><blockquote><p>可能遇到的问题：</p><ol><li>黑窗口一闪而过<br>原因：没有正确配置JAVA_HOME环境变量<br>解决方案：正确配置JAVA_HOME环境变量</li><li>启动报错<ul><li>暴力：找到占用端口号，并且找到对应的进程，杀死该进程</li><li>温柔：修改自身端口号<br>打开/conf/server.xml，<code>&lt;Connector port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;connectionTimeout=&quot;20000&quot; redirectPort=&quot;8443&quot; /&gt;</code>,一般将tomcat默认端口号修改为80，80端口号是http协议的默认端口号，好处在于访问时不用在ip地址后面加上端口</li></ul></li></ol></blockquote></li><li><p>关闭服务</p><ul><li><p>正常关闭</p><p>1.bin/startup.bat启动服务窗口按住ctrl+c<br>2.bin/shutdown.bat，双击运行改文件</p></li><li><p>强制关闭：点击启动服务窗口X</p></li></ul></li></ul></li><li><p>配置</p><ul><li><p>部署项目的方式</p><ul><li><p>直接将项目放到webapps目录下，/hello：项目的访问路径‐‐&gt;虚拟目录 </p><blockquote><p>简化部署：将项目打成一个war包，再将war包放置到webapps目录下，war包会自动解压缩</p></blockquote></li><li><p>配置conf/server.xml文件 ，在<code>&lt;Host&gt;</code>标签体中配置 <code>&lt;Context docBase=&quot;D:\hello&quot; path=&quot;/hehe&quot; /&gt;</code>，其中docBase指项目存放的路径，path指虚拟目录</p></li><li><p>在conf\Catalina\localhost创建任意名称的xml文件。在文件中编写<code>&lt;Context docBase=&quot;D:\hello&quot; /&gt;</code>，虚拟目录就是xml文件的名称</p></li></ul></li><li><p>静态项目和动态项目</p><p>Java动态项目目录结构</p><blockquote><p>项目的根目录</p><blockquote><p>WEB-INF目录</p><blockquote><p>web.xml：web项目的核心配置文件<br>classes目录：放置字节码文件的目录<br>lib目录：放置依赖的jar包</p></blockquote></blockquote></blockquote></li><li><p>将Tomcat集成到IDEA中，并且创建JavaEE项目，部署项目</p><blockquote><ul><li>IDEA会为每一个Tomcat部署的项目单独建立一份配置文件：查看控制台的log，Using CATALINA_BASE，<code>C:\Users\zhangy\.IntelliJIdea2017.3\system\tomcat</code></li><li>工作空间项目和tomcat部署的web项目：tomcat真正访问的是“tomcat部署的web项目”，”tomcat部署的web项目”对应着”工作空间项目” 的web目录下的所有资源 ，WEB‐INF目录下的资源不能被浏览器直接访问</li><li>断点调试：使用“小虫子”debug启动项目</li></ul></blockquote></li></ul></li><li><p>卸载：删除解压缩包</p></li></ul><h2 id="Redis非关系型数据库"><a href="#Redis非关系型数据库" class="headerlink" title="Redis非关系型数据库"></a>Redis非关系型数据库</h2><ul><li>下载<ul><li>官网：<a href="https://redis.io" target="_blank" rel="noopener">https://redis.io</a></li><li>中文网：<a href="http://www.redis.net.cn/" target="_blank" rel="noopener">http://www.redis.net.cn/</a></li></ul></li><li>安装：解压压缩包，安装路径建议不要有中文和空格</li><li>使用</li><li>卸载：删除解压缩包</li></ul><h2 id="MongoDB非关系型数据库"><a href="#MongoDB非关系型数据库" class="headerlink" title="MongoDB非关系型数据库"></a>MongoDB非关系型数据库</h2><ul><li><p>下载</p></li><li><p>安装</p></li><li><p>使用</p><ul><li><p>MongoDB导入文件夹(内含json和bson文件)</p><ul><li><p>使用mongo命令将数据库删除</p><p>mongo命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use db_name;</span><br><span class="line">db.dropDatabase()</span><br></pre></td></tr></table></figure></li></ul></li><li><p>导入（指定文件夹）数据</p><ul><li><p>linux命令:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongorestore -d db_name 文件夹目录</span><br></pre></td></tr></table></figure></li><li><p>windows命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongorestore.exe -d db_name 文件夹目录</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>卸载</p></li></ul><h2 id="Maven项目管理工具"><a href="#Maven项目管理工具" class="headerlink" title="Maven项目管理工具"></a>Maven项目管理工具</h2><ul><li>下载</li><li>安装</li><li>使用</li><li>卸载</li></ul><h2 id="Git版本控制工具"><a href="#Git版本控制工具" class="headerlink" title="Git版本控制工具"></a>Git版本控制工具</h2><ul><li><p>下载：<a href="https://git-scm.com/download" target="_blank" rel="noopener">https://git-scm.com/download</a></p></li><li><p>安装</p><ul><li><p>安装git for windows(Git-2.13.0-64-bit.exe)</p><ul><li><p>next就可以，安装位置可以自己修改</p></li><li><p>需要设置，命令行输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git config --global user.name <span class="string">"Your Name"</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git config --global user.email <span class="string">"email@example.com"</span></span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>安装TortoiseGit(TortoiseGit-2.4.0.2-64bit.msi)</p><ul><li><p>next就可以，安装位置可以自己修改</p></li><li><p>默认选项下启动配置画面，language选择English,点击下一步</p></li><li><p>配置git.exe，选择安装git for windows目录下\Git\bin，点击下一步</p></li><li><p>配置开发者姓名及邮箱，每次提交代码时都会把此信息包含到提交的信息中，点击下一步</p></li><li><p>使用默认配置，点击“完成”按钮完成配置</p></li></ul></li><li><p>安装中文语言包(TortoiseGit-LanguagePack-2.4.0.0-64bit-zh_CN.msi)</p><ul><li>next就可以，安装位置可以自己修改</li><li>语言包安装完毕后可以在TortoiseGit设置中设置语言</li></ul></li></ul></li><li><p>使用</p><ul><li><p>常用命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat 文件名//查看文件内容</span><br><span class="line">git rm 文件名//删除文件</span><br></pre></td></tr></table></figure></li><li><p>创建版本库</p><ul><li><p>创建一个空目录 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mkdir learngit</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> learngit</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">pwd</span></span></span><br></pre></td></tr></table></figure><blockquote><p><code>pwd</code>命令用于显示当前目录</p></blockquote></li><li><p>初始化目录为Git可以管理的仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git init</span></span><br></pre></td></tr></table></figure><blockquote><p>此时当前目录下就会生成一个.git目录，这个目录是Git用来跟踪管理版本库的。如果没有看到.git目录，因为这个目录默认是隐藏的，使用<code>ls -ah</code>命令就可以看到了</p></blockquote></li></ul></li><li><p>添加文件到版本库</p><ul><li><p>添加文件到仓库( 将文件修改添加到暂存区 )</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git add &lt;file1&gt; &lt;file2&gt;..</span></span><br></pre></td></tr></table></figure><blockquote><p>可反复多次使用，添加多个文件</p></blockquote></li><li><p>提交文件到仓库（ 把暂存区的所有内容提交到当前分支 ）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git commit -m &lt;message&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><message>为本次提交说明，例如”first commit”</p></blockquote></li></ul></li><li><p>查看仓库状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git status</span></span><br></pre></td></tr></table></figure></li><li><p>查看修改内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git diff filename//比较工作区和暂存区</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git diff HEAD -- filename//比较工作区和版本库的最新版本</span></span><br></pre></td></tr></table></figure></li><li><p>版本回退</p><ul><li><p>查看提交日志</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">log</span> --pretty=oneline//查看当前最近到最初的版本提交历史</span></span><br></pre></td></tr></table></figure></li><li><p>回退版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git reset --hard HEAD^</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git reset --hard HEAD~n</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git reset --hard commit_id//通过历史节点切换到任意阶段</span></span><br></pre></td></tr></table></figure><blockquote><p>上一个版本HEAD^，上上一个版本HEAD^^；上一个版本HEAD<del>1，上上个版本HEAD</del>2<br>commit_id为git log –pretty=oneline查看时第一列的值，此时只需要输入前几位就可以切到这个版本</p></blockquote></li><li><p>查看命令历史</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git reflog//任意阶段历史节点</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>切换分支</p><ul><li><p>查看本地分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure></li><li><p>查看远程分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -a</span><br></pre></td></tr></table></figure></li><li><p>切换分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b 本地分支命名 origin/远程分支名称</span><br></pre></td></tr></table></figure></li><li><p>切换分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout 本地分支名称</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><ul><li><p>问题</p><ul><li><p>git clone命令从github克隆源码到电脑时出现了以下问题 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">error: RPC failed; curl 18 transfer closed with outstanding read data remaining</span><br><span class="line">fatal: The remote end hung up unexpectedly</span><br><span class="line">fatal: early EOF</span><br><span class="line">fatal: index-pack failed</span><br></pre></td></tr></table></figure><ul><li><p>原因1：缓存区溢出<br>解决办法：加大缓存区，将curl的postBuffer设置为500M,命令行输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.postBuffer 524288000//配置命令</span><br><span class="line"></span><br><span class="line">git config --list//查看配置信息</span><br></pre></td></tr></table></figure></li><li><p>原因2：网络下载速度缓慢<br>解决办法：1.切换网络下载<br>2.修改网络配置，命令行输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.lowSpeedLimit 0</span><br><span class="line">git config --global http.lowSpeedTime 999999</span><br></pre></td></tr></table></figure><p>3.首先浅层clone，然后更新远程库到本地</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//–depth 1的含义是复制深度为1，就是每个文件只取最近一次提交，不是整个历史版本</span><br><span class="line">git clone --depth=1 http://gitlab.xxx.cn/yyy/zzz.git</span><br><span class="line">git fetch --unshallow</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>卸载</p></li></ul><h2 id="Linux操作系统"><a href="#Linux操作系统" class="headerlink" title="Linux操作系统"></a>Linux操作系统</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;DOS&quot;&gt;&lt;a href=&quot;#DOS&quot; class=&quot;headerlink&quot; title=&quot;DOS&quot;&gt;&lt;/a&gt;DOS&lt;/h2&gt;&lt;p&gt;win+R，打开运行窗口，输入cmd，进入DOS操作窗口&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2020/01/24/hello-world/"/>
    <id>http://yoursite.com/2020/01/24/hello-world/</id>
    <published>2020-01-24T10:35:01.943Z</published>
    <updated>2020-04-08T14:12:54.754Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
