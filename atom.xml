<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>奔跑的阳光</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-04-10T07:33:27.805Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>zhangy 保留所有权利</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>编程到底难在哪里</title>
    <link href="http://yoursite.com/2020/04/10/%E7%BC%96%E7%A8%8B%E5%88%B0%E5%BA%95%E9%9A%BE%E5%9C%A8%E5%93%AA%E9%87%8C/"/>
    <id>http://yoursite.com/2020/04/10/%E7%BC%96%E7%A8%8B%E5%88%B0%E5%BA%95%E9%9A%BE%E5%9C%A8%E5%93%AA%E9%87%8C/</id>
    <published>2020-04-10T07:03:24.000Z</published>
    <updated>2020-04-10T07:33:27.805Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>知乎上有个问题：编程到底难在哪里？知乎网友 DJ Hitori 的回答获赞无数。<a id="more"></a></p><p>这篇回答并不是讲述在生活中程序员如何买苹果，而是以买苹果为例说明程序员如何解决问题。程序员需要对问题进行透彻的分析，理清其涉及的所有细节，预测可能发生的所有意外与非意外的情况，列出解决方案的所有步骤，以及对解决方案进行尽量全面的测试。而这些正是编程难的地方。任何一点遗漏都会成为 bug，轻则导致挨骂，重则导致经济损失甚至危害安全。</p><h3 id="高赞回答"><a href="#高赞回答" class="headerlink" title="高赞回答"></a>高赞回答</h3><p><strong>普通人：</strong></p><p>我今天要买一斤苹果。</p><p><strong>程序员：</strong></p><p>我今天要买一斤苹果。</p><p>因为我只喜欢红富士苹果，所以我只买红富士苹果。</p><p>我能接受的最高价格是 10 元 / 斤。</p><p>正常情况下一斤苹果用一个袋子能装下，但是为防万一，我会带两个袋子。</p><p>我知道附近的 3 家水果店，所以我会依次访问这 3 家水果店。</p><p>根据上述条件，我设计出以下的买苹果的流程：</p><p><img src="https://i.loli.net/2020/04/10/yTUwouKFQqsnYGc.jpg" alt="1.jpg"></p><p>这个流程怎么样？我来设计一些测试样例，测试一下这个流程。</p><p>测试发现一个问题：</p><p>如果水果店 0 和水果店 1 都有红富士苹果并且价格都低于 10 元 / 斤，而且水果店 1 的价格比水果店 0 更低，那么我希望买水果店 1 的苹果，但我设计的流程会让我买水果店 0 的苹果。</p><p>为了解决这个问题，我应该先询问所有水果店的价格，然后去价格最低的那一家买苹果。</p><p>经过修改，我重新设计出以下的买苹果的流程：</p><p><img src="https://i.loli.net/2020/04/10/DlUaVeLhJBAW5fv.jpg" alt="2.jpg"></p><p>现在这个流程是不是完美了呢？不是，我还能发现很多问题。</p><p>如果 3 家水果店都有红富士苹果但都不到一斤，但是三家店加起来能达到一斤，那么我不应该结束流程回家，而是应该把三家店的红富士苹果都买下来。</p><p>如果我向水果店询问价格的时候这家店还有红富士苹果，但我询问完所有水果店的价格后这家店的红富士苹果卖完了，那么我的流程会让我试图处理不存在的红富士苹果。</p><p>我走路的过程中可能会遇到突发事件，比如发现了新的水果店，比如袋子破掉了苹果掉一地，对于这些情况我的流程都无法进行处理。</p><p>啊问题太多了我懒得再改流程了。我还是去 X 宝买吧。<br>那么接下来我要设计一个在 X 宝买红富士苹果的流程……</p><p>文章来源：<a href="https://www.zhihu.com/answer/141334678" target="_blank">传送门</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;知乎上有个问题：编程到底难在哪里？知乎网友 DJ Hitori 的回答获赞无数。
    
    </summary>
    
    
      <category term="开发" scheme="http://yoursite.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="编程" scheme="http://yoursite.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>window使用问题解决方案</title>
    <link href="http://yoursite.com/2020/04/10/window%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://yoursite.com/2020/04/10/window%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</id>
    <published>2020-04-10T03:36:16.000Z</published>
    <updated>2020-04-10T07:19:44.999Z</updated>
    
    <content type="html"><![CDATA[<h3 id="护眼模式的开启和关闭"><a href="#护眼模式的开启和关闭" class="headerlink" title="护眼模式的开启和关闭"></a>护眼模式的开启和关闭</h3><p>﻿1.使用 <strong>Win + R</strong> 组合快捷键，打开“运行”，然后键入打开注册表命令<strong>regedit</strong>，按回车键确认打开。<a id="more"></a></p><p>2.打开Win10注册表之后，依次在左侧树状菜单中展开：<code>HKEY_CURRENT_USER\Control Panel\Colors</code>，然后再右侧找到Windows值，并双击打开。</p><p>3.双击Windows，打开编辑字符串窗口，将的<strong>255 255 255</strong>(默认是白色背景)三组颜色数值改成<strong>202 234 206</strong>(淡绿色)，完成后，点击下方的“确定”保存。</p><p>4.继续找到注册表的路径：<code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\DefaultColors\Standard</code>。</p><p>5.同样再在右侧找到Windows双击打开，将默认的数据值 <strong>ffffff</strong> 改成 <strong>caeace</strong> 完成后，点击下方的确定保存。之后重启就会变成淡绿色的护眼状态。</p><blockquote><p>备注：想要恢复怎么办呢。其实很简单。将你修改的202 234 206变为255 255 255。然后将caeace 改为ffffff。重启一下，就可以变成原来的白色背景了。</p></blockquote><h3 id="端口被占用"><a href="#端口被占用" class="headerlink" title="端口被占用"></a>端口被占用</h3><p>1.开始–&gt;运行–&gt;cmd；或者是window+R组合键，调出命令窗口 </p><p>2.输入命令：netstat -ano， 列出所有端口已占用的情况</p><p>3.输入命令：netstat -aon|findstr “1001”，查看被占用端口1001对应的PID4</p><p>4.输入命令：tasklist|findstr “4”，回车，查看是哪个进程或者程序占用了1001端口，结果是：svchost.exe ；或者打开任务管理器，切换到进程选项卡，在PID一列查看4对应的进程</p><blockquote><p>如果看不到PID这一列，右键点击选择列，勾选pid，点击确定</p></blockquote><p>5.输入命令： taskkill /f /t /im tasklist.exe ；或者在任务管理器结束pid为4的进程</p><h3 id="删除文件提示正在被另一程序占用"><a href="#删除文件提示正在被另一程序占用" class="headerlink" title="删除文件提示正在被另一程序占用"></a>删除文件提示正在被另一程序占用</h3><p>1.打开任务管理器，切换到性能选项卡，点击“打开资源监视器”</p><p>2.在cpu选项卡下找到关联的句柄搜索框</p><p>3.输入要删除文件的文件名，看到新出现的程序，右键点击”结束进程”</p><p>4.重新删除文件</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;护眼模式的开启和关闭&quot;&gt;&lt;a href=&quot;#护眼模式的开启和关闭&quot; class=&quot;headerlink&quot; title=&quot;护眼模式的开启和关闭&quot;&gt;&lt;/a&gt;护眼模式的开启和关闭&lt;/h3&gt;&lt;p&gt;﻿1.使用 &lt;strong&gt;Win + R&lt;/strong&gt; 组合快捷键，打开“运行”，然后键入打开注册表命令&lt;strong&gt;regedit&lt;/strong&gt;，按回车键确认打开。
    
    </summary>
    
    
      <category term="开发" scheme="http://yoursite.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="开发环境" scheme="http://yoursite.com/tags/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>幸存者偏差</title>
    <link href="http://yoursite.com/2020/04/09/%E5%B9%B8%E5%AD%98%E8%80%85%E5%81%8F%E5%B7%AE/"/>
    <id>http://yoursite.com/2020/04/09/%E5%B9%B8%E5%AD%98%E8%80%85%E5%81%8F%E5%B7%AE/</id>
    <published>2020-04-09T15:23:48.000Z</published>
    <updated>2020-04-10T01:34:48.597Z</updated>
    
    <content type="html"><![CDATA[<h2 id="幸存者偏差"><a href="#幸存者偏差" class="headerlink" title="幸存者偏差"></a>幸存者偏差</h2><h3 id="一、-简单了解幸存者偏差概念"><a href="#一、-简单了解幸存者偏差概念" class="headerlink" title="一、 简单了解幸存者偏差概念"></a>一、 简单了解幸存者偏差概念</h3><p> 幸存者偏差（Survivor bias），另译为 “生存者偏差” 或 “存活者偏差”，是一种常见的逻辑谬误。指的是<strong>只能看到经过某种筛选而产生的结果，而没有意识到筛选的过程，因此忽略了被筛选掉的关键信息。</strong> <a id="more"></a></p><p>是不是有点点懵逼，下面通过故事来理解一下这个概念。</p><p><img src="https://i.loli.net/2020/04/10/uW64gLy7jDE31Xd.jpg" alt="640.jpg"></p><p>幸存者偏差最早来源于第二次世界大战期间，美国哥伦比亚大学统计学亚伯拉罕·沃德教授接受美国海军要求，运用他在统计方面的专业知识给出关于“飞机应该如何加强防护，才能降低被炮火击落的几率”的建议。</p><p>通过统计发现主要受损部位集中在机翼，所以结论是应当减少机腹的装甲加强机翼的装甲？这个结论显然是可笑的，造成这种偏差的原因是机腹中弹的灰机大多数都坠毁了，统计结论产生了偏差，这个偏差被命名为“幸存者偏差”。</p><p>现在对于概念是不是有一个直观的看法？没有？</p><p>那好，坐好小板凳，我们再来看看下面的栗子~</p><h3 id="二、-理论结合实际解释幸存者偏差"><a href="#二、-理论结合实际解释幸存者偏差" class="headerlink" title="二、 理论结合实际解释幸存者偏差"></a>二、 理论结合实际解释幸存者偏差</h3><blockquote><p>一名记者来到火车站台上，随机询问：“请问你买到火车票了吗？”<br>一位大妈微微一愣，回答：“买到了”<br>记者又转向一位精瘦精瘦的年轻人，问：“请问你买到火车票了吗？”<br>年轻人回答：“买到了”<br>随后记者又问了5个人，大家都回答：“买到了”<br>最后记者对着镜头说：“今年虽然火车票难买，但是通过采访我们发现，大家都买到了火车票，现在正满怀希望地赶回家乡，过个团圆年！”</p></blockquote><p>还没买到票的朋友是不是会问候记者，自己是被代表了吗?哈哈哈~</p><p><img src="https://i.loli.net/2020/04/10/EC3NpDj2siRVW8b.jpg" alt="813494-98497f095a147532.jpg"></p><p> <strong>当我们分析问题所依赖信息全部或者大部分来自于“显著的信息”，较少利用“不显著的信息”甚至忽略“沉默的信息”，得出的结论与事实情况就可能存在巨大偏差。</strong> </p><h3 id="三、-了解幸存者偏差的重要性"><a href="#三、-了解幸存者偏差的重要性" class="headerlink" title="三、 了解幸存者偏差的重要性"></a>三、 了解幸存者偏差的重要性</h3><p>幸存者偏差实质上是一个思维陷阱，如果仅仅只对人生中的一些无关紧要的事情产生影响，似乎就无需过多关注，但现实中，其实这种<strong>幸存者偏差明显更偏好于我们面临的重大人生选择以及工作决策</strong>。</p><p>这些情况，如果被幸存者偏差这个陷阱蒙蔽了，做出了错误的决策，那很有可能会抱憾终身，毕竟人生有时选择是大于努力的。</p><p>所以了解这个概念，会让我们在遇到重大决策前， 能够全面客观冷静的去分析各个可能，不会出现太大的失误，这对于我们来说是真的很重要。</p><p>相信很多人都听过读书无用论，很多老板都是小学学历，而实际情况是，这些能出人头地的“小学老板”是非常少见的，更多的还在底层打工呢。</p><p>但是这些底层打工的人不会跳出来的，所以我们看到的永远是那些被过分渲染的“小学老板”，也因此会导致我们产生了上学没用这样的错误印象。这也会对一些人的人生选择产生误导，到时候就会更加悔恨当初的决定是多么傻。</p><h3 id="四、如何避免幸存者偏差"><a href="#四、如何避免幸存者偏差" class="headerlink" title="四、如何避免幸存者偏差"></a>四、如何避免幸存者偏差</h3><p>细想一下，<strong>出现幸存者偏差，不过是以偏概全，忽视了别的信息</strong>，正如我们想一个问题时，陷进死胡同就会放弃，却很少会去反过来想想，再推导。</p><p>逆向思考就可以打开我们的新视野，看到别人没有看到的东西，了解到别人忽略掉的问题。</p><p>我们知道很多摄影者在拍集体照时总是先数“3、2、1”，可是尽管我们都尽量睁大了眼睛，但总会有些人在数到1的时候坚持不住眨了眼，最后出来的照片就会有闭眼的情况，不管何时看到，都是心塞塞呀~</p><p>但是,我们也知道总会有那么一小搓神奇的人，他们可以坚持比我们大多数人长的时间不用眨眼，那他们在拍照时不闭眼更是小case了，这个其实因人而异的，而且他们是少数，并非多数，不具代表性，那如果要解决这个问题，应该怎么做呢？</p><p>后来有个人出了个主意，大家将信将疑，甚至还觉得有点怪异，可是照片拍出来以后一看，果然一个闭眼的都没有，先停一下，别往下刷，你试试你能想出好主意吗？</p><hr><p>⏫</p><p>多思考一下呀呀呀<del>~</del></p><p>⏬</p><hr><p>看你的思考是不是和我的一样，我们来回顾一下正常的思考路径：</p><p>“使大家在按下快门前不眨眼”是我们的研究对象；</p><p>我们先按正常思路想是不是会局限在如何睁大眼睛以保证拍的那刻眼睛没有闭上，这时估计可能就会出现各种各样奇葩的撑住眼皮的方法了，但是都不科学。</p><p>因为人的眼睛睁得久了就是需要通过眨眼来补充水分，这是所谓的天性嘛，就像打呵欠、打喷嚏，你说你能控制么？而且撑眼皮行不通的，拍出来也不好看呀。</p><p>针对这一问题，我们从正面想就是：如何一直保持睁着眼睛；</p><p>从反面想那就是不长时间保持眼睛睁开，也就是闭上眼睛。</p><p> 按照这个反面思路，答案就出来了：<strong>新办法是让大家都闭上眼睛，喊“3、2、1”后再一起睁眼。那么拍出来的照片大家就都是睁着眼睛的。</strong></p><p>你说这个逆思维是不是用的很妙。它针对的无论是否有特异功能可以长时间不闭眼还是一帮普通人隔几秒钟就要闭下眼补充水分的人，都是一个很好的解决方案，考虑的很全面，也是通过逆思维方式完美避开了幸存者偏差这个思维陷阱。</p><p>这样我们也就不会通过<strong>一小部分人可以长时间不闭眼</strong>而得出<strong>人长时间不闭眼是可以的</strong>这种错误结论，因为它没考虑到其他做不到的人呀，那些做不到的就属于“沉默的信息”。</p><p>希望此文对你有帮助。</p><hr><p>好，以上呢为大家利用黄金思维圈法则介绍完了这个幸存者偏差概念，包括了<strong>这个概念是什么，为什么这个概念很重要，以及我们如何避免这个概念影响到我们</strong>，具体细分为以下几步：</p><blockquote><p>第一步 用专业名词解释与轰炸机遭受攻击后的数据铁统计的故事相结合，让大家简单了解幸存者偏差概念；</p><p>第二步 通过记者车厢采访是否有买到票告诉大家什么是幸存者偏差概念；</p><p>第三步 用上学无用论来说明为什么了解幸存者偏差概念对我们很重要；</p><p>第四步 用拍照如何让大家都睁眼的例子教大家利用逆思维法在生活工作中避免幸存者偏差。</p></blockquote><p>总结完毕。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;幸存者偏差&quot;&gt;&lt;a href=&quot;#幸存者偏差&quot; class=&quot;headerlink&quot; title=&quot;幸存者偏差&quot;&gt;&lt;/a&gt;幸存者偏差&lt;/h2&gt;&lt;h3 id=&quot;一、-简单了解幸存者偏差概念&quot;&gt;&lt;a href=&quot;#一、-简单了解幸存者偏差概念&quot; class=&quot;headerlink&quot; title=&quot;一、 简单了解幸存者偏差概念&quot;&gt;&lt;/a&gt;一、 简单了解幸存者偏差概念&lt;/h3&gt;&lt;p&gt; 幸存者偏差（Survivor bias），另译为 “生存者偏差” 或 “存活者偏差”，是一种常见的逻辑谬误。指的是&lt;strong&gt;只能看到经过某种筛选而产生的结果，而没有意识到筛选的过程，因此忽略了被筛选掉的关键信息。&lt;/strong&gt;
    
    </summary>
    
    
      <category term="思维" scheme="http://yoursite.com/categories/%E6%80%9D%E7%BB%B4/"/>
    
    
      <category term="认知偏差" scheme="http://yoursite.com/tags/%E8%AE%A4%E7%9F%A5%E5%81%8F%E5%B7%AE/"/>
    
  </entry>
  
</feed>
